x =
  (3 + 2): "test" + "xx"
  x: a + 4
a:"c"


x = indent(3 + 2): "test" + "xx" indent x: a + 4 a:"c"

// , == lookahead

,x
id
id,=   						// State: Assign, closed when has value & lookahead is newline or ";"
id|=,indent					// Indent++
id|=,(
id|=|(,3
id|=|(|3,+			// State: Math op. Closed on \n, ; or )
id|=|(|3|+,2
id|=|(|3|+|2,)		// Close math op
id|=|(|sum,)			// State: parenthesis
id|=|sum    			// Close parenthesis
id|=|sum,:			// State: PropDef. Closed on lookahead newline, ";" or indent
id|=|sum|:,"test"	
id|=|sum|:|"test",+	// State: math op
id|=|sum|:|"test"|+,"xx"
id|=|sum|:|"test"|+|"xx",indent // Close math op, return to state Propdef
id|=|sum|:|sum,indent // Close Propdef, return to Block
id|=|propDef,indent 	// Start ObjDef, indent unchanged
id|=|propDef,x
id|=|propDef|x,: // State: PropDef
id|=|propDef|x|:,a
id|=|propDef|x|:|a,+ // State: math op
id|=|propDef|x|:|a|+,4
id|=|propDef|x|:|a|+|4,\n // Close mathop, back to propDef
id|=|propDef|x|:|sum,\n // Close propdef, back to objDef.
id|=|propDef|propDef,\n		
id|=|propDef|propDef|\n,a 	// Close ObjDef, back to assign indent--
id|=|objDef,a               // Close Assign
assign,a               		
assign|a,:               	// State: propDef
assign|a|:,"c"
assign|a|:|"c",eof			// Close propDef
assign|propDef,eof			// State: objDef
assign|propDef,eof			// Close: objDef
assign|objDef,eof
